/****** PICTRAPI.H *************** Shabakov D.A. ****** 29/03/16 ***
******* PICTRAPI.H *************** Belenkov O.V. ****** 08/12/05 ***
******* PICTRAPI.H *************** Kruzhkov A.E. ****** 25/04/02 ***
******* PICTRAPI.H *************** Solovieva S.A.****** 13/01/03 ***
******* PICTRAPI.H *************** Derevyagina Zh.A.*** 19/02/16 ***
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2016              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*       ФУНКЦИИ РАБОТЫ С ДИАЛОГОМ СОХРАНЕНИЯ КАРТЫ                 *
*                                                                  *
*                   mappictr.dll                                   *
*                                                                  *
*******************************************************************/

#ifndef PICTRAPI_H
#define PICTRAPI_H


#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif


//-----------------------------------------------------------------
// ПАРАМЕТРЫ ДИАЛОГА СОХРАНЕНИЯ КАРТЫ
//-----------------------------------------------------------------

typedef struct SAVEASPICTRPARM
{
  long Length;     // Длина структуры SAVEASPICTRPARM(обязательный параметр)
#if defined(_M_X64) || defined(BUILD_DLL64)          // 19/02/16
  long Reserve1;
#endif

  HWND Handle;     // Идентификатор окна карты(обязательный параметр)

  long Scale;      // Масштаб (знаменатель)(для сохраняемого гр. файла)
  long Resolution; // Разрешающая способность (точек на дюйм)(для сохраняемого гр. файла)
  long BitCount;   // Количество бит на пиксел (для сохраняемого гр. файла)
#if defined(_M_X64) || defined(BUILD_DLL64)
  long Reserve2;
#endif

  char Intensity;  // Интенсивность заливки площадных (0-100)(для сохраняемого EMF)  13/01/03
  char ResolvColor;// Признак разложения CMYK в разные файлы (для сохраняемого EPS 0 - в разные  файлы 1 - в один) 13/01/03
  char IntergraphTIFF; // Флаг записи матрицы трансформирования для однобитного TIFF для использования в Intergraph // 28/09/05
  char CompressTIFF;   // Применение метода сжатия PackBit   // 12/10/05
#if defined(_M_X64) || defined(BUILD_DLL64)
  char Reserve3[4];
#endif

  DFRAME PlaneFrame; // Прямоугольник изображения в районе (в метрах)

  char Regime;     // Режим работы задачи (см. SAVEASPICTR_REGIME)
  char TypeView;   // Тип изображения (см. SAVEASPICTR_TYPE)(для сохраняемого EMF)
  char Black;      // Флаг черно-белого изображения (1 - есть, 0 - нет)(для сохраняемого EMF)
  char Border;     // Флаг наличия рамки (1 - есть, 0 - нет)(для сохраняемого EMF)

  char FileOfParam;// Флаг создания файла параметров (*.ini) (для сохраняемого гр. файла)
  char FormatCorel9; // Формат EMF, поддерживаемый  (для сохраняемого EMF)   // 31/01/01
  char ColorModel; // Флаг цветовой модели (0 - RGB, 1 - CMYK)(для четырех 8-битных BMP)
  char PolyMark;   // Флаг полиграфических меток (1 - есть, 0 - нет)(для ColorModel = CMYK)

  char FileName[260];  // Имя файла(обязательный параметр)
#if defined(_M_X64) || defined(BUILD_DLL64)
  char Reserve4[4];
#endif
}
  SAVEASPICTRPARM;


//-----------------------------------------------------------------
// ЗНАЧЕНИЯ ПОЛЕЙ СТРУКТУРЫ ДИАЛОГА СОХРАНЕНИЯ КАРТЫ
//-----------------------------------------------------------------

enum SAVEASPICTR_REGIME    // РЕЖИМ РАБОТЫ ЗАДАЧИ "СОХРАНЕНИЕ КАРТЫ"
{
  SAP_SAVEONLY   = -2,  // Сохранение карты без вызова диалога
                        //
  SAP_INITPARM    = -1, // Режим инициализации параметров сохранения
                        //  (кнопки "Выбрать" и "Изменить" отключены)
  SAP_SAVEALL    =  0,  // Сохранение карты с инициализацией сохраняемой
                        //  области при загрузке диалога сохранения карты
  SAP_SAVE       =  1,  // Сохранение карты с установленной сохраняемой
                        //  областью (RectMetr)
  SAP_SELECTFRAME =  2, // Режим выбора фрагмента сохраняемой области
                        //
  SAP_CHANGEFRAME =  3, // Режим изменения фрагмента сохраняемой
                        //  области
  SAP_MOVEFRAME   =  4, // Режим сдвига фрагмента сохраняемой области     // 23/08/01
  SAP_SELECTBYOBJECT = 5,// Режим формирования фрагмента сохраняемой области по
                        //  выбранному объекту
  SAP_SELECTBYRASTERS= 6,// Режим формирования фрагмента сохраняемой области по
                        //  габаритам исходных растров               // 08/04/14
};

  // Значения, принимаемые полем Regime при нажатии на кнопки:
  // "Выполнить" - SAP_SAVE,
  // "Выбрать"   - SAP_SELECTFRAME,
  // "Изменить"  - SAP_CHANGEFRAME,
  // "Подвинуть" - SAP_MOVEFRAME,
  // "По объекту"- SAP_SELECTBYOBJECT
  // После выбора, изменения или перемещения области можно
  // вызвать диалог повторно не изменяя значения поля Regime.


extern "C"
{

// --------------------------------------------------------------
// Загрузка графического изображения(BMP,PCX,TIFF) в растровый формат (RSW)  // 31/05/05
// Диалог визуального сопровождения процесса загрузки графического
// изображения в растровый формат (RSW)
//    map - карта,содержащая векторные данные;
//    lpszsource - имя файла грформата BMP,PCX,TIFF (размер области 260 байт);
//    lpsztarget - область для имени файла растрового формата (размер области 260 байт);
//    При ошибке возвращает ноль
// --------------------------------------------------------------
 long int WINAPI _export LoadImageToRstEx(HMAP hmap,
                                       char* lpszsource,
                                       char* lpsztarget,
                                       TASKPARM* parm);


// --------------------------------------------------------------
// Фиксированный поворот растра
// Диалог визуального сопровождения процесса
//    hmap   -  идентификатор открытой векторной карты
//    handle -  идентификатор окна документа
//    reDraw -  флаг перерисовки окна документа по завершении процесса
//    name   - имя файла растровой карты (размер области 260 байт);
//    При ошибке возвращает ноль
// --------------------------------------------------------------
long int WINAPI _export LoadRstMirrorDialogEx(HMAP hmap, HWND handle,
                                              char* name, TASKPARM* parm,
                                              int * reDraw);
long int WINAPI _export LoadRstMirrorDialogExUn(HMAP hmap, HWND handle,         // 28/03/16
                                              const WCHAR* name, TASKPARM* parm,
                                              int * reDraw);

// --------------------------------------------------------------
// Оптимизация\сжатие файла растровой
// Диалог визуального сопровождения процесса
// карты с возможным сжатием изображения растра
//    map    - карта,содержащая векторные данные;
//    handle -  идентификатор окна документа
//    name   - имя файла растровой карты
//    reDraw -  флаг перерисовки окна документа по завершении процесса
//    При ошибке возвращает ноль
// --------------------------------------------------------------
long int WINAPI _export LoadRstCompressDialog(HMAP hmap, HWND handle,
                                              char* name,
                                              TASKPARM* parm, int* reDraw);

// --------------------------------------------------------------               // 29/03/16
// Нарезка растра
// Диалог визуального сопровождения процесса
//    hmap  -  идентификатор открытой векторной карты
//    handle-  идентификатор окна документа
//    name  - имя файла растровой карты
//    При ошибке возвращает ноль
// --------------------------------------------------------------
long int WINAPI _export LoadRstCutDialog(HMAP hmap, HWND handle,
                                         const char* name,
                                         SAVEASPICTRPARM* saveParm,
                                         TASKPARM* parm);
long int WINAPI _export LoadRstCutDialogUn(HMAP hmap, HWND handle,
                                         const WCHAR* name,
                                         SAVEASPICTRPARM* saveParm,
                                         TASKPARM* parm);


}       // extern "C"





#endif //

