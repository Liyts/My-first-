/****** RSWGTAPI.H ************** Shabakov D.A.   ****** 11/08/16 **
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2016              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*  В настоящем файле содержится объявление следующих диалогов:     *
*                                                                  *
*   "Гистограмма полутонового растра"                              *
*   "Бинаризация растровой карты"                                  *
*   "Фильтрация 1-битного растра"                                  *
*   "Загрузка растровых данных потоком по файлу *.PLN"             *
*   "Загрузка растровых данных потоком по файлу *.PLS"             *
*   "Установка параметров проекции растров, матриц..."             *
*   "Изменение привязки растра на величину dX, dY"                 *
*   "Изменение привязки всех растров документа на величину dX, dY" *
*   "Нарезка растра по выделенным объектам                         *
*   "Загрузка графического изображения в растровую карту RSW"      *
*   "Настройка отображаемых каналов мультиспектрального снимка"    *
*   "Диалог оптимизации растровой карты"                           *
*   "Диалог оптимизации группы растров"                            *
*   "Диалог оптимизации группы матриц"                             *
*                                                                  *
*             Сервисные диалоги редактора растра                   *
*   Диалог "Текущий растр"                                         *
*   Диалог "Толщина линии"                                         *
*   Диалог "Выбор цвета пера и кисти" для 24-х битного растра      *
*   Диалог "Выбор цвета пера и кисти" для 1,4,8 битного растра     *
*                                                                  *
*                                                                  *
*                                                                  *
*                                                                  *
********************************************************************
*                                                                  *
*                 ИМПОРТИРОВАНИЕ ФУНКЦИЙ :                         *
*                                                                  *
*                                                                  *
*    #include "maplib.h"                                           *
*                                                                  *
*    // Загрузка библиотеки                                        *
*    HINSTANCE libInst = ::LoadLibrary(RSWGISTLIB);                *
*                                                                  *
*    // Заполнение структур                                        *
*                                                                  *
*    // Вызов функции                                              *
*                                                                  *
*    long int (WINAPI * lpfn_RswFilterDialog)( HMAP hmap,          *
*                                             const char* rswName, *
*                                             TASKPARM* parm);     *
*                                                                  *
*    (FARPROC)lpfn_RswFilterDialog =                               *
*              GetProcAddress(libInst, "RswFilterDialog");         *
*                                                                  *
*    (*lpfn_RswFilterDialog)(hmap,                                 *
*                            "raster.rsw",                         *
*                            parm);                                *
*                                                                  *
*    // Выгрузка библиотеки                                        *
*                                                                  *
*    ::FreeLibrary(libInst);                                       *
*                                                                  *
*******************************************************************/
#ifndef RSWGTAPI_H
#define RSWGTAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif

#ifndef MAPAPI_H
  #include "mapapi.h"
#endif

#ifdef LINUXAPI                                                      // 30/12/15
  #define _RSWGAPI
  #define _RSWGIMP
#else
  #define _RSWGAPI  WINAPI
  #define _RSWGIMP __declspec(dllexport)
#endif


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++ ОПИСАНИЕ ФУНКЦИЙ АКТИВИЗАЦИИ ДИАЛОГОВЫХ ОКОН ++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++




extern "C"
{
 // --------------------------------------------------------------
 // Гистограмма полутонового растра
 // (Применимо для растров с палитрой - 256 градаций серого)
 // param      - указатель на структуру типа TASKPARM (см. maptype.h)
 // hwnd       - Идентификатор окна документа
 // hMap       - идентификатор открытой векторной(растровой) карты
 // rect1      - габариты изображения растра в пикселах района.
 // rect2      - прямоугольная область исследуемого растра.
 //              Если rect2 == 0, то исследуется вся область rect1
 // point      -  Координаты центра окна в метрах в районе
 // flag1      -  параметр не используется. Должен быть равен 0.
 // flag2      -  параметр не используется. Должен быть равен 0.
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 _RSWGIMP long int _RSWGAPI RswHistogramDialog(TASKPARM* param,
                                            HWND hwnd,
                                            HMAP hmap,
                                            RECT* rect1,
                                            RECT* rect2,
                                            POINT* point,
                                            long int * flag1,
                                            long int * flag2);

 // --------------------------------------------------------------
 // Бинаризация растровой карты
 // Режим предназначена для преобразования палитры растровой карты с размером элемента 4 или 8 бит на пиксель.
 // В основе процесса бинаризации лежит метод пороговой обработки оттенков серого.
 // В качестве порога выступает динамически определяемое значение.
 // (Применимо для растров с палитрой в 16 и 256 цветов)
 //
 // hwnd       - Идентификатор окна документа
 // hMapDoc    - необязательный параметр(если не используется, д.б. равен нулю)
 // hMap       - идентификатор открытой векторной(растровой) карты
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 // rstNumber  - номер файла растровой карты в цепочке (растр д.б. добавлен\открыт в документ hMap)
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI RswBinarizationDialog(HWND hwnd,
                                               HMAPDOC hMapDoc,
                                               HMAP hMap,
                                               TASKPARM * parm,
                                               int rstNumber);

 // --------------------------------------------------------------
 // Загрузка растровых данных потоком по файлу *.PLN
 // hMap       - идентификатор открытой векторной(растровой) карты
 // lpszsource - имя файла PLN
 // lpsztarget - имя создаваемого документа (длина строки д.б. не менее 260 байт)
 // sizetarget - размер памяти, выделенной по указателю lpsztarget (не менее 260 байт)
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI LoadPlnToRasterMap(HMAP map, const char* lpszsource,
                                            char* lpsztarget,
                                            TASKPARM* parm);

_RSWGIMP long int _RSWGAPI LoadPlnToRasterMapUn(HMAP map, const WCHAR* lpszsource,
                                            WCHAR* lpsztarget, int sizetarget,
                                            TASKPARM* parm);

_RSWGIMP long int _RSWGAPI PlnToRswDialog(HMAP hMap,
                                            const char* lpszsource,
                                            char* lpsztarget,
                                            TASKPARM* parm);

 // --------------------------------------------------------------
 // Загрузка растровых данных потоком по файлу PLS
 // hMap       - идентификатор открытой векторной(растровой) карты
 // lpszsource - имя файла PLS
 // lpsztarget - имя создаваемого документа (длина строки д.б. MAX_PATH)
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI LoadPLSToRasterMap(HMAP map, const char* lpszsource,
                                            char* lpsztarget,
                                            TASKPARM* parm);

 // --------------------------------------------------------------
 // Фильтрация 1-битного растра
 // hmap       -  идентификатор открытой векторной карты
 // rswName    - имя файла растровой карты
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI RswFilterDialog(HMAP hmap, const char* rswName,
                                            TASKPARM* parm);

_RSWGIMP long int _RSWGAPI RswFilterDialogUn(HMAP hmap, const WCHAR* rswName,
                                            TASKPARM* parm);

 // --------------------------------------------------------------
 // УСТАРЕВШАЯ ФУНКЦИЯ
 //
 // Установка параметров проекции растров, матриц...
 // title      -  заголовок диалога (например, "Установка параметров проекции растровой карты")
 // map        -  идентификатор открытой векторной карты
 // mapregisterex - указатель на структуру типа MAPREGISTEREX (см. mapcreate.h)
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI SettingProjectionParameters(const char* title,
                                                     HMAP map,
                                                     MAPREGISTEREX* mapregisterex,
                                                     TASKPARM* parm);

 // --------------------------------------------------------------
 // Диалог "Изменение привязки растра на величину dX, dY"
 // hmap      - идентификатор открытой векторной карты с добавленными растрами
 // rswNumber - номер редактируемого растра в цепочке растров документа
 // parm      - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // dx,dy     - величина линейного сдвига привязки растра
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI MoveLocationOfOneRaster(HMAP hmap, long int rswNumber,
                                         TASKPARMEX* parm,
                                         double*dx, double*dy);

 // --------------------------------------------------------------
 // Диалог "Изменение привязки группы растров на величину dX, dY"
 // Растры без привязки игнорируются
 // hmap  -  идентификатор открытой векторной карты с добавленными растрами
 // parm  - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // dx,dy - величина линейного сдвига привязки группы растров
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI MoveRswLocations(HMAP hmap, TASKPARMEX* parm,
                                          double*dx, double*dy);

 // --------------------------------------------------------------
 // Нарезка растра по выделенным объектам
 // hmap        -  идентификатор открытой векторной карты с добавленными растрами
 // parm        - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // rswNumber   - номер нарезаемого растра в цепочке растров документа
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
_RSWGIMP long int _RSWGAPI RswCuttingBySelectedObjects(HMAP hmap,
                                            TASKPARMEX *parm,
                                            long int rswNumber);

 //========================================================================
 // Диалог загрузки графического изображения в растровую карту(RSW)
 // Обрабатываются файлы следующих форматов: BMP, JPEG, PCX, TIFF, GeoTIFF, PNG, GIF
 //    В качестве файлов привязки растрового изображения могут применяться следующие данные:
 //    - Файл настроек (*.ini),
 //    - Файл настроек Фотоплан (*.tpf),
 //    - Файл настроек Талка (*.pln),
 //    - Файл настроек MapInfo (*.tab),
 //    - Файл настроек (world file)(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld)
 //    - Файл OziExplorer (*.map)
 //
 //    hmap - карта,содержащая векторные(растровые, матричные) данные;
 //    lpszsource - указатель на имя исходного файла
 //    sizesource - размер памяти, выделенной по указателю lpszsource (не менее 260 байт)
 //    lpsztarget - указатель на имя выходного файла
 //    sizetarget - размер памяти, выделенной по указателю lpsztarget (не менее 260 байт)
 //    fileLocType- тип применяемого файла привязки растрового изображения
 //                 fileLocType может принимать следующие значения:
 //                 120 - (*.ini), 121 - Фотоплан (*.tpf), 122 - Талка (*.pln),
 //                 123 - world file(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld),
 //                 124 - MapInfo (*.tab), 125 - OziExplorer (*.map).
 //    parm       - параметры прикладной задачи. Структура TASKPARM описана в MAPTYPE.H
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI DialogLoadImageToRsw(HMAP hmap,
                                             char* lpszsource, long int sizesource,
                                             char* lpsztarget, long int sizetarget,
                                             long int fileLocType, TASKPARM *parm);

_RSWGIMP long int _RSWGAPI DialogLoadImageToRswUn(HMAP hmap,
                                             WCHAR* lpszsource, long int sizesource,
                                             WCHAR* lpsztarget, long int sizetarget,
                                             long int fileLocType, TASKPARM *parm);

 //========================================================================
 // Диалог загрузки графического изображения в растровую карту(RSW)
 // Обрабатываются файлы следующих форматов: BMP, JPEG, PCX, TIFF, GeoTIFF, PNG, GIF
 //    В качестве файлов привязки растрового изображения могут применяться следующие данные:
 //    - Файл настроек (*.ini),
 //    - Файл настроек Фотоплан (*.tpf),
 //    - Файл настроек Талка (*.pln),
 //    - Файл настроек MapInfo (*.tab),
 //    - Файл настроек (world file)(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld)
 //    - Файл OziExplorer (*.map)
 //
 //    hmap - карта,содержащая векторные(растровые, матричные) данные;
 // lpszsourceNew - указатель на строку с именем(именами)  исходного файла.
 //                 Возможна передача нескольких имен файлов.
 //                 На каждое имя файла выделяется MAX_PATH байт строки lpszsourceNew
 //                 Формат строки д.б. следующим:
 //                 "D:\\Data\\name.tiff00000000"
 //                 "D:\\Data\\name1.tiff0000000"
 //                 "D:\\Data\\name2.tiff0000000"
 // sizesourceNew - размер в байтах строки lpszsourceNew с именем(именами) исходного файла
 //              sizesourceNew = MAX_PATH*count; где count - количество имен файлов
 //    lpsztarget - указатель на имя выходного файла
 //    sizetarget - размер памяти, выделенной по указателю lpsztarget (не менее 260 байт)
 //    fileLocType- тип применяемого файла привязки растрового изображения
 //                 fileLocType может принимать следующие значения:
 //                 120 - (*.ini), 121 - Фотоплан (*.tpf), 122 - Талка (*.pln),
 //                 123 - world file(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld),
 //                 124 - MapInfo (*.tab), 125 - OziExplorer (*.map).
 //    parm       - параметры прикладной задачи. Структура TASKPARM описана в MAPTYPE.H
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI DialogLoadImageToRswEx(HMAP hmap,
                              const char* lpszsourceNew, long int sizesourceNew,
                              char* lpsztarget, long int sizetarget,
                              long int fileLocType, TASKPARM *parm);

_RSWGIMP long int _RSWGAPI DialogLoadImageToRswExUn(HMAP hmap,
                             const WCHAR* lpszsourceNew, long int sizesourceNew,
                             WCHAR* lpsztarget, long int sizetarget,
                             long int fileLocType, TASKPARM *parm);

 //========================================================================
 // Диалог настройки отображаемых каналов мультиспектрального снимка
 // Для определения мультиспектрального снимка воспользуйтесь функцией mapRstIsAccessTiff (см. rstapi.h)
 // Функция mapRstIsAccessTiff для мультиспектрального снимка воозвращает 1, для обычных растров - 0.
 //
 // hMap       - идентификатор открытой векторной(растровой) карты
 // parm       - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // rswNumber  - номер обрабатываемого растра в цепочке растров документа
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI RswChannelsMultispectral(HMAP hmap, TASKPARMEX *parm,
                                                  long int rswNumber);

 //========================================================================
 // Диалог оптимизации растровой карты
 // map    - идентификатор документа карты
 // handle - идентификатор окна карты(документа)
 // name   - имя файла обрабатываемой растровой карты
 // parm   - указатель на структуру TASKPARM (см. maptype.h)
 // reDraw - флаг перерисовки окна карты(документа) handle
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI LoadRstCompressDialog(HMAP hmap, HWND handle,
                                               const char* name, TASKPARM* parm,
                                               int* reDraw);

_RSWGIMP long int _RSWGAPI LoadRstCompressDialogUn(HMAP hmap, HWND handle,
                                               const WCHAR* name,
                                               TASKPARM* parm, int* reDraw);

 //========================================================================
 // Диалог оптимизации группы растров
 // map   - идентификатор документа карты
 // mode  - режим обработки растров.
 //         Параметр mode может принимать следующие значения:
 //         0 - оптимизация,
 //         1 - сжатие LZW,
 //         2 - сжатие JPEG,
 //         3 - декомпрессия,
 //         4 - оптимизация сжатых растров
 // rswList  - указатель на список растров для обработки.
 //            На каждое имя растра должно быть выделено 260 байт
 // rswCount - количество имен растров, размещенных по указателю rswList.
 // если rswList == NULL или rswCount == 0, обрабатываются все растры документа
 // parm   - указатель на структуру TASKPARM (см. maptype.h)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI OptimizationOfRastersByGroup(HMAP map, long int mode,
                                               const char* rswList, long int rswCount,
                                               TASKPARM* parm);

_RSWGIMP long int _RSWGAPI OptimizationOfRastersByGroupUn(HMAP map, long int mode,
                                               const WCHAR* rswList, long int rswCount,
                                               TASKPARM* parm);

 //========================================================================
 // Диалог оптимизации матрицы
 // map    - идентификатор документа карты
 // handle - идентификатор окна карты(документа)
 // name   - имя файла обрабатываемой матрицы
 // parm   - указатель на структуру TASKPARM (см. maptype.h)
 // reDraw - флаг перерисовки окна карты(документа) handle
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI LoadMtrCompressDialog(HMAP hmap, HWND handle,
                                               const char* name, TASKPARM* parm,
                                               int* reDraw);

_RSWGIMP long int _RSWGAPI LoadMtrCompressDialogUn(HMAP hmap, HWND handle,
                                               const WCHAR* name,
                                               TASKPARM* parm, int* reDraw);

 //========================================================================
 // Диалог оптимизации группы матриц
 // map         - идентификатор документа карты
 // mode        - режим обработки матриц.
 //               Параметр mode может принимать следующие значения:
 //               0 - сжатие,
 //               1 - декомпрессия,
 //               2 - оптимизация,
 //               3 - оптимизация сжатых матриц.
 // matrixList  - указатель на список матриц для обработки.
 //               На каждое имя матрицы должно быть выделено 260 байт
 // matrixCount - количество имен матриц, размещенных по указателю matrixList.
 // если matrixList == NULL или matrixCount == 0, обрабатываются все матрицы документа
 // parm        - указатель на структуру TASKPARM (см. maptype.h)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI OptimizationOfMatrixByGroup(HMAP map, long int mode,
                                                     char* matrixList,
                                                     long int matrixCount,
                                                     TASKPARM* parm);

 //========================================================================
 // Диалог оптимизации группы матриц
 // map         - идентификатор документа карты
 // mode        - режим обработки матриц.
 //               Параметр mode может принимать следующие значения:
 //               0 - сжатие,
 //               1 - декомпрессия,
 //               2 - оптимизация,
 //               3 - оптимизация сжатых матриц.
 // matrixList  - указатель на список матриц для обработки.
 //               На каждое имя матрицы должно быть выделено MAX_PATH_LONG символов
 // matrixCount - количество имен матриц, размещенных по указателю matrixList.
 // если matrixList == NULL или matrixCount == 0, обрабатываются все матрицы документа
 // parm        - указатель на структуру TASKPARM (см. maptype.h)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI OptimizationOfMatrixByGroupUn(HMAP map, long int mode,
                                                     WCHAR* matrixListW,
                                                     long int matrixCount,
                                                     TASKPARM* parm);

 //========================================================================
 // Запросить координаты габаритов растрового изображения
 // Обрабатываются файлы следующих форматов: BMP, JPEG, PCX, TIFF, GeoTIFF, PNG, GIF
 //    В качестве файлов привязки растрового изображения могут использоваться следующие данные:
 //    - Файл настроек MapInfo (*.tab),
 //    - Файл OziExplorer (*.map)
 //    - Файл настроек (world file)(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld)
 //    - Файл настроек Фотоплан (*.tpf),
 //    - Файл настроек Талка (*.pln),
 //
 // fileName        - имя исходного графического файла
 // points          - указатель на массив из 4-х точек (заполняется функцией координатами габаритов растрового изображения в метрах)
 // countPoint      - количество элементов массива, размещенного по адресу points (параметр должен быть равен 4)
 // mapregister     - указатель на структуру MAPREGISTEREX. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры параметрами проекции исходного материала.
 // datumparam      - указатель на структуру DATUMPARAM. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры коэффициентами трансформирования геодезических координат.
 // ellipsoidparam  - указатель на структуру ELLIPSOIDPARAM. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры параметрами эллипсоида.
 // meterInElementX - указатель для записи значения размера элемента по X
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поле
 // meterInElementY - указатель для записи значения размера элемента по Y
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поле
 // flagMessage     - флаг вывода сообщений MessageBox
 // Функция возвращает: 1 - успешное завершение функции,
 //                    -1 - неподдерживаемый формат графического файла fileName
 //                    -2 - координаты привязки изображения не обнаружены
 //                    -3 - не найдены параметры проекции и СК, позволяющие пересчитать метры в градусы
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI gistGetTiffCoordinatesEx(const char* fileName, DOUBLEPOINT* points, long int countPoint,
                                                 MAPREGISTEREX* mapreg, DATUMPARAM * datum, ELLIPSOIDPARAM * ellipsoid,
                                                 double* meterInElementX, double* meterInElementY,
                                                 long int flagMessage);

_RSWGIMP long int _RSWGAPI gistGetTiffCoordinatesUn(const WCHAR* fileName, DOUBLEPOINT* points, long int countPoint,   // 15/06/15
                                                 MAPREGISTEREX* mapreg, DATUMPARAM * datum, ELLIPSOIDPARAM * ellipsoid,
                                                 double* meterInElementX, double* meterInElementY,
                                                 long int flagMessage);

 //========================================================================
 // Запросить координаты габаритов растрового изображения
 // Обрабатываются файлы следующих форматов: BMP, JPEG, PCX, TIFF, GeoTIFF, PNG, GIF
 //    В качестве файлов привязки растрового изображения могут использоваться следующие данные:
 //    - Файл настроек MapInfo (*.tab),
 //    - Файл OziExplorer (*.map)
 //    - Файл настроек (world file)(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld)
 //    - Файл настроек Фотоплан (*.tpf),
 //    - Файл настроек Талка (*.pln),
 //
 // fileName        - имя исходного графического файла
 // points          - указатель на массив из 4-х точек (заполняется функцией координатами габаритов растрового изображения в метрах)
 // countPoint      - количество элементов массива, размещенного по адресу points (параметр должен быть равен 4)
 // mapregister     - указатель на структуру MAPREGISTEREX. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры параметрами проекции исходного материала.
 // datumparam      - указатель на структуру DATUMPARAM. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры коэффициентами трансформирования геодезических координат.
 // ellipsoidparam  - указатель на структуру ELLIPSOIDPARAM. (заполняется функцией)
 //                   При обнаружении данных в исходном графическом файле, или в файле
 //                   привязки растрового изображения функция заполняет поля
 //                   структуры параметрами эллипсоида.
 // flagMessage      - флаг вывода сообщений MessageBox
 // Функция возвращает: 1 - успешное завершение функции,
 //                    -1 - неподдерживаемый формат графического файла fileName
 //                    -2 - координаты привязки изображения не обнаружены
 //                    -3 - не найдены параметры проекции и СК, позволяющие пересчитать метры в градусы
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI gistGetTiffCoordinates(const char* fileName,
          DOUBLEPOINT* points, long int countPoint,
          MAPREGISTEREX* mapreg, DATUMPARAM * datum, ELLIPSOIDPARAM * ellipsoid,
          long int flagMessage);

 //======================================================================== // 10/05/12
 // Запросить размеры элемента растрового изображения
 // Обрабатываются файлы следующих форматов: BMP, JPEG, PCX, TIFF, GeoTIFF, PNG, GIF
 //    В качестве файлов привязки растрового изображения могут использоваться следующие данные:
 //    - Файл настроек MapInfo (*.tab),
 //    - Файл OziExplorer (*.map)
 //    - Файл настроек (world file)(*.tfw;*.jgw;*.bpw;*.pcw;*.j2w;*.sdw;*.nfw;*.wld)
 //    - Файл настроек Фотоплан (*.tpf),
 //    - Файл настроек Талка (*.pln),
 //
 // fileName        - имя исходного графического файла
 // meterInElementX - указатель размер элемента по оси X (заполняется функцией в метрах)
 // meterInElementY - указатель размер элемента по оси Y (заполняется функцией в метрах)
 // Функция возвращает: 1 - успешное завершение функции,
 //                    -1 - неподдерживаемый формат графического файла fileName
 //                    -2 - координаты привязки изображения не обнаружены
 //                    -3 - размеры элемента изображения не обнаружены
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI gistGetImageParameters(const char* fileName,
          double * meterInElementX, double * meterInElementY,
          long int flagMessage);


 //========================================================================     // 17/06/15
 // Запросить код EPSG параметров проекции растрового изображения
 // fileName    - имя исходного графического файла
 // flagMessage - флаг вывода сообщений MessageBox
 // codeEPSG
 // Функция возвращает: 1 - успешное завершение функции,
 //                    -1 - неподдерживаемый формат графического файла fileName
 //                    -2 - координаты привязки изображения не обнаружены
 //                    -3 - не найдены параметры проекции и СК
 //    При ошибке Функция возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI gistGetCodeEpsgByFileName(const char* fileName,
                                                   long int flagMessage,
                                                   long int *codeEPSG);

_RSWGIMP long int _RSWGAPI gistGetCodeEpsgByFileNameUn(const WCHAR* fileName,
                                                   long int flagMessage,
                                                   long int *codeEPSG);


 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 //  Сервисные диалоги редактора растра
 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef GISLIB
 //========================================================================
 //  Диалог "Текущий растр" редактора растра
 // hMap            - идентификатор документа
 // parm            - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // rswFileName     - имя файла текущего растра (заполняется функцией)
 // sizeRswFileName - размер буфера rswFileName в байтах
 // point           - координаты левой верхней точки формы (пиксели экрана)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI rswgSetCurrentRasterDialog(HMAP hMap, TASKPARMEX* parm,
                                               WCHAR* rswFileName,
                                               int sizeRswFileName,
                                               POINT* point);

 //========================================================================
 //  Диалог "Толщина линии" редактора растра
 // lineThickness   - указатель на толщину линии (заполняется функцией)
 // point           - координаты левой верхней точки формы (пиксели экрана)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI rswgLineThicknessDialog(TASKPARMEX* parm,
                                               int* lineThickness,
                                               POINT* point);

 //========================================================================
 //  Диалог "Выбор цвета пера и кисти" редактора растра
 // для 24-х битного растра
 // parm            - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // colorPen        - указатель на цвет пера (заполняется функцией)
 // colorFon        - указатель на цвет фона (заполняется функцией)
 // point           - координаты левой верхней точки формы (пиксели экрана)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI rswgPenFonColorsDialog(TASKPARMEX* parm,
                                               COLORREF* colorPen,
                                               COLORREF* colorFon,
                                               POINT* point);

 //========================================================================
 //  Диалог "Выбор цвета пера и кисти" редактора растра
 // для 1,4,8 битного растра
 // parm            - указатель на структуру типа TASKPARMEX (см. maptype.h)
 // palette         - указатель на палитру растра
 // colorCount      - количество цветов в палитре растра (2, 16, 256)
 // colorPen        - указатель на цвет пера (заполняется функцией)
 // colorFon        - указатель на цвет фона (заполняется функцией)
 // point           - координаты левой верхней точки формы (пиксели экрана)
 //
 //    При ошибке возвращает ноль
 //========================================================================
_RSWGIMP long int _RSWGAPI rswgPenFonColorsFromRswPaletteDialog(TASKPARMEX* parm,
                                               COLORREF* palette, int colorCount,
                                               int* colorPen, int* colorFon,
                                               POINT* point);
#endif  // GISLIB


 //========================================================================
 // Диалог "Экспорт высот матрицы MTW в файл TIFF"
 // map            - идентификатор документа карты
 // inputname      - имя файла исходной матрицы
 // outputname     - имя файла выходного файла (*.TIF)
 // parm           - указатель на структуру TASKPARM
 // При ошибке возвращает ноль
 //========================================================================
 _RSWGIMP long int _RSWGAPI LoadMtwToTiffConverterDialogUn(HMAP hmap,
                                                        const WCHAR* inputname,
                                                        const WCHAR* outputname,
                                                        TASKPARM* parm);

 //========================================================================
 // Диалог "Границы видимости"
 // hMap           - идентификатор открытого документа
 // parm           - указатель на структуру TASKPARMEX
 // topScale       - указатель на значение верхней границы масштаба
 // bottomScale    - указатель на значение нижней границы масштаба
 // dialogTitle    - указатель на 
 // При ошибке возвращает ноль
 //========================================================================
 _RSWGIMP long int _RSWGAPI LoadDialogScaleViewUn(HMAP hMap, TASKPARMEX * parm,
                                                  long int * topScale,
                                                  long int * bottomScale,
                                                  const WCHAR* dialogTitle);

 //========================================================================
 // Сравнение двух строк без учета регистра  
 // Возвращает:
 //            0 - строки идентичны
 //            1 - str1 > str2
 //            2 - str1 < str2
 // При ошибке возвращает -1
 //========================================================================
_RSWGIMP long int _RSWGAPI mapStricmp(char* str1, char*str2);

}

#endif


