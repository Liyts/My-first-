/****** LISTAPI.H *************** Shabakov D.A.   ****** 11/08/16 **
******* LISTAPI.H *************** Konon V.N.      ****** 04/05/00 **
******* LISTAPI.H *************** Belenkov O.V.   ****** 12/12/00 **
******* LISTAPI.H *************** Gorbunov A.V.   ****** 31/03/05 **
*                                                                  *
*              Copyright (c) PANORAMA Group 1991-2016              *
*                      All Rights Reserved                         *
*                                                                  *
********************************************************************
*                                                                  *
*                  FOR  WINDOWS95 & WINDOWS NT                     *
*                                                                  *
********************************************************************
*                                                                  *
*      ВЫЗОВ ДИАЛОГОВ "СПИСОК ДАННЫХ" И "УПРАВЛЕНИЕ ПАЛИТРОЙ"      *
*                                                                  *
********************************************************************
*                                                                  *
*                 ИМПОРТИРОВАНИЕ ФУНКЦИЙ :                         *
*                                                                  *
*                                                                  *
*    // Загрузка библиотеки                                        *
*                                                                  *
*    HINSTANCE libInst = ::LoadLibrary("gisforms.dll");            *
*                                                                  *
*    HMAP hMap;                                                    *
*                                                                  *
*    // Заполнение структур                                        *
*    MAPLISTPARM  maplistparm;                                     *
*    TASKPARM  parm;                                               *
*                                                                  *
*    // Вызов функции                                              *
*                                                                  *
* long int (WINAPI * lpfn_LoadMapListDialog)(HMAP hMap,            *  
*                                         MAPLISTPARM* maplistparm,*
*                                         TASKPARM* parm);         *
* (FARPROC)lpfn_LoadMapListDialog =                                *
*                   GetProcAddress(libInst, "LoadMapListDialog");  *
*     long int Rezult = (*lpfn_LoadMapListDialog)(hMap,            *
*                                                 &maplistparm,     *
*                                                 &parm);           *
*                                                                  *
*    // Выгрузка библиотеки                                        *
*                                                                  *
*    ::FreeLibrary(libInst);                                       *
*                                                                  *
*******************************************************************/

#ifndef LISTAPI_H
#define LISTAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++ ОПИСАНИЕ ФУНКЦИЙ АКТИВИЗАЦИИ ДИАЛОГОВЫХ ОКОН ++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++


typedef struct MAPLISTPARM     // ПАРАМЕТРЫ СОЗДАНИЯ ДИАЛОГА "СПИСОК ДАННЫХ"
{
  HWND    Window;              // Идентификатор окна документа
#ifdef _M_X64
  int Reserv;                  // Выравнивание
#endif // _M_X64
  int PageNumber;              //  Номер активной закладки при открытии диалога "СПИСОК ДАННЫХ"
                               //  0 - активизируется закладка "СПИСОК РАСТРОВ"
                               //  1 - активизируется закладка "СПИСОК МАТРИЦ"
                               //  2 - активизируется закладка "СПИСОК ПК"
                               //  3 - активизируется закладка "СПИСОК TIN-моделей"   // 24/10/11
                               //  4 - активизируется закладка "СПИСОК WMS"           // 24/10/11

  char SaveMtrPath[MAX_PATH];  // Месторасположение
  char SaveRstPath[MAX_PATH];  // добавляемых
  char SaveSitPath[MAX_PATH];  // данных
  char SaveTinPath[MAX_PATH];  // 31/03/05

  int RstPageNumber;           //  В закладке "СПИСОК РАСТРОВ" отображать
                               //  вид(параметры) растра  - 0(1);
  int MtrPageNumber;           //  В закладке "СПИСОК МАТРИЦ" отображать
                               //  вид(параметры) матрицы  - 0(1);
  int SitPageNumber;           //  В закладке "СПИСОК ПК" отображать
                               //  вид(параметры) ПК  - 0(1);
  int TinPageNumber;           // 31/03/05

  int RstNumber;               //  Номер активного растра в закладке "СПИСОК РАСТРОВ"
  int MtrNumber;               //  Номер активной матрицы в закладке "СПИСОК МАТРИЦ"
  int SitNumber;               //  Номер активной ПК в закладке "СПИСОК ПК"
  int TinNumber;               // 31/03/05

  DOUBLEPOINT CentrePosition;  // Координаты центра окна в метрах в районе
}
  MAPLISTPARM;


typedef struct MAPLISTPARMUN   // ПАРАМЕТРЫ СОЗДАНИЯ ДИАЛОГА "СПИСОК ДАННЫХ"
{
  HWND     Window;             // Идентификатор окна документа
#ifdef _M_X64
  int Reserv;                  // Выравнивание
#endif // _M_X64
  int PageNumber;              //  Номер активной закладки при открытии диалога "СПИСОК ДАННЫХ"
                               //  0 - активизируется закладка "СПИСОК РАСТРОВ"
                               //  1 - активизируется закладка "СПИСОК МАТРИЦ"
                               //  2 - активизируется закладка "СПИСОК ПК"
                               //  3 - активизируется закладка "СПИСОК TIN-моделей"
                               //  4 - активизируется закладка "СПИСОК WMS"

  int RstPageNumber;           //  В закладке "СПИСОК РАСТРОВ" отображать
                               //  вид(параметры) растра  - 0(1);
  int MtrPageNumber;           //  В закладке "СПИСОК МАТРИЦ" отображать
                               //  вид(параметры) матрицы  - 0(1);
  int SitPageNumber;           //  В закладке "СПИСОК ПК" отображать
                               //  вид(параметры) ПК  - 0(1);
  int TinPageNumber;

  int RstNumber;               //  Номер активного растра в закладке "СПИСОК РАСТРОВ"
  int MtrNumber;               //  Номер активной матрицы в закладке "СПИСОК МАТРИЦ"
  int SitNumber;               //  Номер активной ПК в закладке "СПИСОК ПК"
  int TinNumber;               //  Номер активной TIN в закладке "СПИСОК ДАННЫХ"
  int WmsNumber;               //  Номер активной WMS в закладке "СПИСОК ДАННЫХ"

  int Reserv2[7];              // Резерв (должен быть обнулен)

  DOUBLEPOINT CentrePosition;  // Координаты центра окна в метрах в районе

  WCHAR SaveMtrPath[MAX_PATH_LONG];  // Месторасположение
  WCHAR SaveRstPath[MAX_PATH_LONG];  // добавляемых
  WCHAR SaveSitPath[MAX_PATH_LONG];  // данных
  WCHAR SaveTinPath[MAX_PATH_LONG];
}
  MAPLISTPARMUN;

typedef struct PALETTECNTPARM  // ПАРАМЕТРЫ СОЗДАНИЯ ДИАЛОГА "УПРАВЛЕНИЕ ПАЛИТРОЙ"
{
  HWND     Window;                 // Идентификатор окна документа

  COLORREF ColorOfSelectObject;    // Цвет выбранных объектов
  COLORREF ColorOfSelectedObjects; // Цвет отмеченных объектов
  COLORREF ColorOfSetObjects;      // Цвет набора объектов  
                                   //04/05/00
  int     ThickOfSelectObject;     // Толщина линии выбранных объектов
}
  PALETTECNTPARM;

extern "C"
{
 //            ДИАЛОГ "СПИСОК ДАННЫХ ЭЛЕКТРОННОЙ КАРТЫ"
 // Загрузка диалога "Список данных электронной карты" из приложения
 // Диалог содержит :
 //            закладку "Список растров",
 //            закладку "Список матриц",
 //            закладку "Список пользовательских карт"
 // и перечень функций и методов для работы с растровыми, матричными
 // и пользовательскими картами.
 // При ошибке возвращает ноль
 //
 // При изменении габаритов района(добавление/закрытие карт)
 // из диалога "Список данных электронной карты" посылаются
 // окну документа (maplistparm->Window) сообщения:
 //    -  WM_MOVEDOC(0x601) Отображение участка карты с заданной точкой
 //               в центре окна.
 //       WPARAM - указатель на заданную точку типа DOUBLEPOINT
 //       КООРДИНАТЫ ТОЧКИ В СИСТЕМЕ ИЗОБРАЖЕНИЯ В ПИКСЕЛАХ
 //
 //    -  MT_CHANGEDATA(0x65D) Извещение об изменении состава данных
 //       WPARAM,LPARAM не используются.                                         // 10/01/12

 long int _export WINAPI  LoadMapListDialog(HMAP hMap,
                                           MAPLISTPARM* maplistparm,
                                           TASKPARM* parm);

 long int _export WINAPI  LoadMapListDialogUn(HMAP hMap,
                                           MAPLISTPARMUN* maplistparm,
                                           TASKPARM* parm);
                                           
 // --------------------------------------------------------------
 // Загрузка диалога "Управление палитрой" из Панорамы(приложения)
 // Диалог содержит :
 // - закладку "Управление служебной палитрой"
 //  (изменение цвета фона карты, цвета выбранного объекта,
 //   цвета отмеченных объектов,толщину линии выделения
 //   выбранного или отмеченного объекта);
 // - закладку "Управление палитрой карты";
 // - закладку "Управление палитрой матрицы";
 // - закладку "Управление палитрой растра".
 //
 // После успешного выполнения функции в структуре paletteParm
 // сохраняются установленные в диалоге "Управление палитрой"
 // значения: Цвета выбранных объектов, Цвета отмеченных объектов,
 //           Толщины линии выбранных объектов
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI  LoadPaletteControl(HMAP hMap,
                                   PALETTECNTPARM* paletteParm,
                                   TASKPARM* parm);

 // --------------------------------------------------------------
 // Загрузка диалога "Управление палитрой" с активизацией необходимой закладки
 // Диалог содержит :
 // - закладку "Управление служебной палитрой"
 //  (изменение цвета фона карты, цвета выбранного объекта,
 //   цвета отмеченных объектов,толщину линии выделения
 //   выбранного или отмеченного объекта);
 // - закладку "Управление палитрой карты";
 // - закладку "Управление палитрой матрицы";
 // - закладку "Управление палитрой растра".
 // Структуры PALETTECNTPARM  и TASKPARM описаны в maptype.h
 // pageNumber - Номер активной закладки при открытии диалога "Управление палитрой"
 //              0 - активизируется закладка "Управление служебной палитрой"
 //                   (изменение цвета фона карты, цвета выбранного объекта,
 //                   цвета отмеченных объектов,толщину линии выделения
 //                   выбранного или отмеченного объекта);
 //              1 - активизируется закладка "Управление палитрой карты";
 //              2 - активизируется закладка "Управление палитрой матрицы";
 //              3 - активизируется закладка "Управление палитрой растра".
 // number - Номер активного файла (растра, матрицы, ПК) в текущей закладке
 //          Если number == 0, то активизируется закладка "Управление служебной палитрой"
 //          Исключение составляет Карта. Ее номер 0.
 //          В закладке "Управление палитрой матрицы" не используется.
 // При ошибке возвращает ноль
 // -------------------------------------------------------------- // 01/07/03
 long int _export WINAPI  LoadPaletteControlEx(HMAP hMap,
                                   PALETTECNTPARM* paletteParm,
                                   TASKPARM* parm,
                                   long int pageNumber,
                                   long int number);


// -------------------------------------------------------------- // 05/12/03
// Загрузка диалога "Границы видимости"
// При ошибке возвращает ноль
// --------------------------------------------------------------
 long int _export WINAPI  LoadDialogScaleView(HMAP hMap, HWND handle, TASKPARM * parm,
                                              long int * topScale, long int * bottomScale,
                                              char* title);

// --------------------------------------------------------------
// Диалог визуального сопровождения процесса оптимизации файла матрицы
// качества с возможным сжатием изображения матрицы
//    hmap    - карта,содержащая векторные данные;
//    handle  - идентификатор окна документа
//    name    - имя файла матрицы качества
//    parm    - указатель на структуру TASKPARM
//    reDraw  - флаг перерисовки окна документа по завершении процесса
//    При ошибке возвращает ноль
// --------------------------------------------------------------
 long int _export WINAPI  LoadMtqCompressDialog(HMAP hmap, HWND handle,
                                                const char* name,
                                                TASKPARM* parm, int* reDraw);

// --------------------------------------------------------------
// Диалог "Сохранить растр в файл форматов BMP, PCX"
//    hmap    - карта,содержащая векторные данные
//    name    - имя исходного растра
// targetName - имя выходного растра
//    parm    - указатель на структуру TASKPARM
//    При ошибке возвращает ноль
// --------------------------------------------------------------
 long int _export WINAPI  RstSaveAsExUn(HMAP hMap, const WCHAR * name,
                                    const WCHAR * targetName,TASKPARM *parm);

// --------------------------------------------------------------
// Диалог "Сохранить растр в файл формата TIFF"
//    hmap    - карта,содержащая векторные данные
//    name    - имя исходного растра
// targetName - имя выходного растра
//    parm    - указатель на структуру TASKPARM
//    При ошибке возвращает ноль
// --------------------------------------------------------------
 long int _export WINAPI  RstSaveAsTiffUn(HMAP hMap, const WCHAR * name,
                                    const WCHAR * targetName, TASKPARM *parm);

// --------------------------------------------------------------
// Фиксированный поворот растра
// Диалог визуального сопровождения процесса Зеркало растра
//    hmap    -  идентификатор открытой векторной карты
//    handle  -  идентификатор окна документа
//    name    - имя файла растровой карты
//    parm    - указатель на структуру TASKPARM
//    reDraw  - флаг перерисовки окна документа по завершении процесса
//    При ошибке возвращает ноль
// --------------------------------------------------------------
 long int _export WINAPI  LoadRstMirrorDialogExUn(HMAP hmap, HWND handle,
                                              const WCHAR* name, TASKPARM* parm,
                                              int * reDraw);


}

#define LEVEL_RSW         0xFFFFFFFD // Ветка "Растр"             // 16/12/03
#define LEVEL_RSWQUALITY  0xFFFFFFFE // Ветка "Растры качеств"
#define LEVEL_RSWVIEW     0xFFFFFFFF // Ветка "Растры зоны видимости"


#endif


